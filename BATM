package semesteropgave;

public class BATM {

	private boolean userAuthenticated;
	private int currentAccountName;
	private Screen screen;
	private Keypad keypad;
	private CashDispenser cashDispenser;
	private DepositSlot depositSlot;
	private BankDatabase bankDatabase;
	
	private static final int BALANCE_INQUIRY = 1;
	private static final int WITHDRAWAL = 2;
	private static final int DEPOSIT = 3;
	private static final int EXIT = 4;
	
	public BATM() {
		
		userAuthenticated = false;
		currentAccountName = 0;
		screen = new Screen();
		keypad = new Keypad();
		cashDispenser = new CashDispenser();
		depositSlot = new DepositSlot();
		bankDatabase = new BankDatabase();
	}
	
	public void run() {
		while (true) {
			while (!userAuthenticated) {
				screen.displayMessageLine("\nVelkommen");
				authenticateUser();
			}
			
			performTransactions();
			userAuthenticated = false;
			currentAccountName = 0;
			screen.displayMessageLine("\nMange tak! Farvel!\n");
		}
	}
	
	public void authenticateUser() {
		screen.displayMessage("\nSkriv venligst dit navn: ");
		int accountName = keypad.getInput();
		screen.displayMessage("\nSkriv din PIN-kode: ");
		int pin = keypad.getInput();
		
		userAuthenticated = 
				bankDatabase.authenticateUser(accountName, pin);
		
		if (userAuthenticated) {
			currentAccountName = accountName;
		}
		else 
			screen.displayMessageLine("Forkert indtastet navn eller PIN. Indtast navn og PIN igen.\n");
	}
	
	private void performTransactions() {
		Transaction currentTransaction = null;
		boolean userExited = false;
		
		while (!userExited) {
			int mainMenuSelection = displayMainMenu();
			
			switch (mainMenuSelection) {
			
			case BALANCE_INQUIRY:
			case WITHDRAWAL:
			case DEPOSIT:
				
				currentTransaction =
				createTransaction(mainMenuSelection);
				
				currentTransaction.execute();
				break;
			case EXIT:
				screen.displayMessageLine("\nGår ud af systemet...");
				userExited = true;
				break;
			default:
				screen.displayMessageLine("\nDu indtastede ikke et gyldigt tal. Prøv igen.");
				break;
			}
		}
	}
	
	private int displayMainMenu() {
		
		screen.displayMessageLine("\nHovedmenu:");
		screen.displayMessageLine("\n1 - Vis min balance");
		screen.displayMessageLine("\n2 - Hæv penge");
		screen.displayMessageLine("\n3 - Indsæt penge");
		screen.displayMessageLine("\n4 - Afslut\n");
		screen.displayMessage("Tast valg: ");
		return keypad.getInput();
	}
	
	private Transaction createTransaction(int type) {
		Transaction temp = null;
		
		switch (type) {
			
		case BALANCE_INQUIRY:
			temp = new BalanceInquiry(currentAccountName, screen, bankDatabase);
			break;
		case WITHDRAWAL:
			temp = new Withdrawal(currentAccountName, screen, bankDatabase, keypad, cashDispenser);
			break;
		case DEPOSIT:
			temp = new Deposit(currentAccountName, screen, bankDatabase, keypad, depositSlot);
			break;
		}
		
		return temp;
	}
}
