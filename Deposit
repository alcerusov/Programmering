package semesteropgave;

public class Deposit extends Transaction {

	private double amount; // Beløb som skal indsættes
	private String userName; // Brugernavn
	private Keypad keypad; // Reference til tasteturet
	private Screen screen;
	private BankDatabase bankDatabase;
	private final static int CANCELED = 0; // Konstanten der gør det muligt at afslutte programmet
	
	public Deposit(String userName, Screen screen, BankDatabase bankDatabase, Keypad keypad) {
		this.userName = userName;
		this.keypad = keypad;
		this.bankDatabase = bankDatabase;
		this.screen = screen;
	}
		@Override
	// Anmoder brugeren om at indtaste et beløb i BitCoins
	public double prompt() {
		
		// Viser brugerens input
		screen.displayMessage( "\nIndtast venligst et beløb i " + "BitCoins (eller tast 0 for at afslutte): " );
		double inputd = keypad.getInput(); // Modtager input om beløbets størrelse
		
		// Undersøger om brugeren afsluttede eller indtastede et gyldigt beløb
		if ( inputd == CANCELED )
			return CANCELED;
		else {
			return ( double ) inputd; // Returnerer beløbet i BitCoins
		} // end else
	}
	@Override
	public void execute() {
		
		amount = prompt(); // Modtager den indsatte beløb fra bruger

		// Undersøger om brugeren har indsat et beløb eller afsluttet sessionen
		if ( amount != CANCELED ) {
			
			bankDatabase.credit(userName, amount); // Krediter den aktive bruger med den angivne mængde btc
			screen.displayMessageLine("\nPengene er blevet indsat.");
			
			double totalBalance = bankDatabase.getTotalBalance(userName); // Henter den totale balance på kontoen
			double totalDkr = totalBalance*bankDatabase.getBtcRate(); // Omregner balancen til danske kroner
					
			// Viser ny balance på brugeren konto
			screen.displayMessage("\nNy balance: ");
			screen.displayBtcAmount(totalBalance);
			screen.displayDkrAmount(totalDkr);

		}
		else // Brugeren afsluttede i stedet for at indsætte beløb
		{
			screen.displayMessageLine( "\nAfslutter transaktion..." );
		} // end else
	} // afslutter metode 
}

